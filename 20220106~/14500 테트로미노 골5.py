# 최대 500*500 = 250000개의 블럭
# 각 테트미노에 해당하는 모양 연산
# 5*4 (각 방향)*4(비대칭블럭)80 if else 등 사용하면 시간초과;
# bfs or 완전탐색으로 풀 수 있지 않을까?
# 문제 유형은 그리디? 그래프? 탐색?

import sys
from collections import deque
input=sys.stdin.readline

n,m=map(int,input().split()) # 일단 종이의 세로n가로m 입력
matrix=[list(map(int,input().split()))for i in range(n)]
    
mx=0

shape = [[[0, 1], [0, 2], [0, 3]],
[[1, 0], [2, 0], [3, 0]],
[[0, 1], [1, 0], [1, 1]], 
[[1, 0], [2, 0], [2, 1]],
[[1, 0], [2, 0], [2, -1]],
[[0, 1], [0, 2], [1, 0]],
[[0, 1], [0, 2], [1, 2]],
[[0, 1], [1, 1], [2, 1]],
[[0, 1], [1, 0], [2, 0]],
[[0, 1], [0, 2], [-1, 2]],
[[1, 0], [1, 1], [1, 2]],
[[1, 0], [1, 1], [2, 1]],
[[1, 0], [1, -1], [2, -1]],
[[0, 1], [-1, 1], [-1, 2]],
[[0, 1], [1, 1], [1, 2]],
[[0, 1], [0, 2], [1, 1]],
[[1, 0], [1, 1], [2, 0]],
[[1, 0], [1, -1], [2, 0]],
[[0, 1], [0, 2], [-1, 1]]]

for i in range(n):
    for j in range(m):
        for s in shape:
            now=matrix[i][j]
            for l in range(3):
                nx=j+s[l][1]
                ny=i+s[l][0]
                if 0<= nx <m and 0<= ny <n:
                    now += matrix[ny][nx]
            mx=max(now,mx)

print(mx)

            
        
